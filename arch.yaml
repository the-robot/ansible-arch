---

- hosts: localhost
  connection: local
  become: true

  vars:
    normal_user: "{{ lookup('env', 'NORMAL_USER' )}}"
    normal_user_home: "/home/{{ lookup('env', 'NORMAL_USER' )}}"
    golang_download_url: https://dl.google.com/go/go1.17.linux-amd64.tar.gz

  tasks:
  # Debug
  - name: print variables for debug
    debug:
      msg: "Non root username is {{ normal_user }}."

  # Install packages
  - name: install essential tools
    package:
      name:
        - bat
        - lsd
        - wget
        - neofetch
        - htop
        - tmux
        - vim
        - neovim
        - zsh
        - fzf
        - alacritty
        - firefox
        - chromium
        - qbittorrent
        - openvpn
        - vlc
        - libreoffice-fresh

  - name: install developer tools
    package:
      name:
        - python-pip
        - python-setuptools
        - python-virtualenv
        - nmap
        - vscode
        - filezilla
        - aws-cli
        - docker
        - kubectl
        - minikube
        - helm
        - terraform
  
  # Add user to docker
  - name: add user to docker
    shell: |
      # create docker group if not exists
      if [ $(getent group docker) ]; then
        echo "docker group already exists."
      else
        groupadd docker
      fi

      # add user to docker group if not
      if getent group docker | grep -q "\b{{ normal_user }}\b"; then
        echo "{{ normal_user }} is already in docker group"
      else
        usermod -aG docker {{ normal_user }}
      fi
      
      newgrp docker

  # Yay package manager for linux
  - name: install yay package manager
    local_action: command sh scripts/install-yay.sh

  # Install aur packages with yay
  - name: install aur packages with yay
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      #######################################
      # Install package with yay if it does not exists in a system.
      # Arguments:
      #   Command name.
      #   Package name.
      #######################################
      function yay_if_not_exists() {
        if ! command -v "$1" &> /dev/null; then
          yay -a -Sy --noconfirm --cleanafter $2
        fi
      }

      # install spotify
      yay_if_not_exists "spotify" "spotify"

      # install postman
      yay_if_not_exists "postman" "postman-bin"

      # install slack
      yay_if_not_exists "slack" "slack-desktop"

      # install discord
      yay_if_not_exists "discord" "discord_arch_electron"

      # install telegram
      yay_if_not_exists "telegram" "telegram-desktop-bin"

      # install bitwarden
      yay_if_not_exists "bitwarden" "bitwarden-bin"
      
      # install plex client
      yay_if_not_exists "plex-media-player" "plexmediaplayer"

      # clean unneeded dependencies
      yay --clean --noconfirm

  # Install go programming
  - name: install go programming language
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if ! command -v go &> /dev/null; then
        curl -o /tmp/go.tar.gz {{ golang_download_url }}
        tar -xf /tmp/go.tar.gz -C {{ normal_user_home }}
        rm /tmp/go.tar.gz
      fi

  # Install rust programming
  - name: install rust programming language
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if ! command -v cargo &> /dev/null; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
      fi
  
  # Install spacevim
  - name: install spacevim
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if [ ! -d "/home/{{ normal_user }}/.SpaceVim.d" ]; then
        curl -sLf https://spacevim.org/install.sh | bash
      fi

  # Install fonts
  - name: install fonts
    shell: |
      if [ ! -d "/usr/local/share/fonts" ]; then
        mkdir /usr/local/share/fonts
      fi

      cp -R fonts/* /usr/local/share/fonts

  # Setup zsh and misc configs and plugins
  - name: setup zshrc, oh-my-zsh and other configs
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      DOTS_REPO=https://raw.githubusercontent.com/the-robot/dots/master

      # create config folder if not exists
      if [ ! -d "{{ normal_user_home }}/.config" ]; then
        mkdir {{ normal_user_home }}/.config
      fi

      # override vscode settings.json
      curl -o {{ normal_user_home }}/.config/Code\ -\ OSS/User/settings.json $DOTS_REPO/vscode/settings.json

      # install z.sh
      curl -o {{ normal_user_home }}/.z.sh https://raw.githubusercontent.com/rupa/z/master/z.sh

      # install oh-my-zsh if not exists
      if [ ! -d "{{ normal_user_home }}/.oh-my-zsh" ]; then
        sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      fi

      # install zsh syntax highlight
      if [ ! -d "{{ normal_user_home }}/.zsh/zsh-syntax-highlighting" ]; then
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git {{ normal_user_home }}/.zsh/zsh-syntax-highlighting
      fi

      # override .zshrc
      curl -o {{ normal_user_home }}/.zshrc $DOTS_REPO/terminals/.zshrc

      # create alacritty folder and setup config if not exists
      if [ ! -d "{{ normal_user_home }}/.config/alacritty" ]; then
        mkdir {{ normal_user_home }}/.config/alacritty
      fi
      curl -o {{ normal_user_home }}/.config/alacritty/alacritty.yml $DOTS_REPO/terminals/alacritty/alacritty.yml

      # install tmux config
      curl -o {{ normal_user_home }}/.tmux.conf $DOTS_REPO/terminals/tmux/.tmux.conf

      # install tmux cpu plugin
      if [ ! -d "{{ normal_user_home }}/.tmux/plugins/tmux-cpu" ]; then
        git clone https://github.com/tmux-plugins/tmux-cpu.git {{ normal_user_home }}/.tmux/plugins/tmux-cpu
      fi

      # install Vundle vim plugin manager
      if [ ! -d "{{ normal_user_home }}/.vim/bundle/Vundle.vim" ]; then
        git clone https://github.com/VundleVim/Vundle.vim.git {{ normal_user_home }}/.vim/bundle/Vundle.vim
      fi

      # install Ctrlp fzf vim plugin
      if [ ! -d "{{ normal_user_home }}/.vim/bundle/ctrlp.vim" ]; then
        git clone https://github.com/ctrlpvim/ctrlp.vim.git {{ normal_user_home }}/.vim/bundle/ctrlp.vim
      fi

      # install neovim config
      if [ -d "{{ normal_user_home }}/.SpaceVim" ]; then
        # install color
        curl -o {{ normal_user_home }}/.SpaceVim/colors/monokai_pro.vim $DOTS_REPO/vi/nvim/colors/monokai_pro.vim

        # override config
        curl -o {{ normal_user_home }}/.SpaceVim/init.vim $DOTS_REPO/vi/nvim/init.vim
      fi

      # install spacevim config
      if [ ! -d "{{ normal_user_home }}/.SpaceVim.d" ]; then
        mkdir {{ normal_user_home }}/.SpaceVim.d
      fi
      curl -o {{ normal_user_home }}/.SpaceVim.d/init.toml $DOTS_REPO/vi/spacevim/init.toml

  # Set wallpaper
  # - name: copy wallpaper file
  #   copy:
  #     src: files/wallpaper.png
  #     dest: /usr/share/backgrounds/wallpaper.png
  #     owner: root
  #     group: root
  
  # - name: set wallpaper
  #   dconf:
  #     key: "/org/gnome/desktop/background/picture-uri"
  #     value: "'file:///usr/share/backgrounds/wallpaper.png'"
  
  # - name: set wallpaper
  #   dconf:
  #     key: "/org/gnome/desktop/background/picture-options"
  #     value: "'zoom'"
