---

- hosts: localhost
  connection: local
  become: true

  vars:
    normal_user: "{{ lookup('env', 'NORMAL_USER' )}}"
    normal_user_home: "/home/{{ lookup('env', 'NORMAL_USER' )}}"

    golang_download_url: https://dl.google.com/go/go1.17.linux-amd64.tar.gz
    lsd_download_url: https://github.com/Peltoche/lsd/releases/download/0.20.1/lsd-musl_0.20.1_amd64.deb
    telegram_download_url: https://telegram.org/dl/desktop/linux
    discord_download_url: https://dl.discordapp.net/apps/linux/0.0.15/discord-0.0.15.tar.gz
    slack_download_url: https://downloads.slack-edge.com/releases/linux/4.19.2/prod/x64/slack-desktop-4.19.2-amd64.deb
    postman_download_url: https://dl.pstmn.io/download/latest/linux64

  tasks:
  # Debug
  - name: print variables for debug
    debug:
      msg: "Non root username is {{ normal_user }}."

  # Install packages
  - name: install essential tools
    package:
      name:
        - cmake
        - software-properties-common
        - xclip
        - bat
        - wget
        - neofetch
        - htop
        - tmux
        - vim
        - neovim
        - zsh
        - fzf
        - chromium
        - qbittorrent
        - openvpn
        - vlc

  - name: install developer tools
    package:
      name:
        - python3-pip
        - python-setuptools
        - python3-virtualenv
        - code-oss
        - filezilla
  
  - name: essential fonts
    package:
      name:
        - ttf-mscorefonts-installer
        - fonts-liberation
        - fonts-uralic
        - fonts-linuxlibertine
        - fonts-dustin
        - ttf-staypuft

  # Install go programming
  - name: install go programming language
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if ! command -v go &> /dev/null; then
        curl -o /tmp/go.tar.gz "{{ golang_download_url }}"
        tar -xf /tmp/go.tar.gz -C {{ normal_user_home }}
        rm /tmp/go.tar.gz
      fi

  # Install rust programming
  - name: install rust programming language
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if ! command -v cargo &> /dev/null; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
      fi

  # Install lsd
  - name: install lsd (better ls)
    shell: |
      if ! command -v lsd &> /dev/null; then
        curl -L -o /tmp/lsd.deb "{{ lsd_download_url }}"
        apt install /tmp/lsd.deb
        rm /tmp/lsd.deb
      fi
  
  # Install discord
  - name: install discord
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if [[ ! -d "{{ normal_user_home }}/.local/bin/Discord" ]]; then
        curl -L -o /tmp/discord.tar.gz "{{ discord_download_url }}"
        tar -xf /tmp/discord.tar.gz -C {{ normal_user_home }}/.local/bin
        rm /tmp/discord.tar.gz
      fi
  
  # Install telegram
  - name: install telegram
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if [[ ! -d "{{ normal_user_home }}/.local/bin/Telegram" ]]; then
        curl -L -o /tmp/telegram-desktop.tar.gz "{{ telegram_download_url }}"
        tar -xf /tmp/telegram-desktop.tar.gz -C {{ normal_user_home }}/.local/bin
        rm /tmp/telegram-desktop.tar.gz
      fi
  
  # Install slack
  - name: install slack
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if [[ ! -d "{{ normal_user_home }}/.local/bin/Slack" ]]; then
        curl -L -o /tmp/slack-desktop.deb {{ slack_download_url }}
        dpkg-deb -x /tmp/slack-desktop.deb {{ normal_user_home}}/.local/bin/Slack
        rm /tmp/slack-desktop.deb
      fi

  # Install spotify
  - name: install spotify
    shell: |
      if ! command -v spotify &> /dev/null; then
        curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - 
        echo "deb http://repository.spotify.com stable non-free" | sudo tee /etc/apt/sources.list.d/spotify.list
        apt update
        apt install -y spotify-client
      fi
  
  # Install postmam
  - name: install postman
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if [[ ! -d "{{ normal_user_home }}/.local/bin/Postman" ]]; then
        curl -L -o /tmp/postman.tar.gz "{{ postman_download_url }}"
        tar -xf /tmp/postman.tar.gz -C {{ normal_user_home }}/.local/bin
        rm /tmp/postman.tar.gz
      fi
  
  # Install spacevim
  - name: install spacevim
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      if [ ! -d "/home/{{ normal_user }}/.SpaceVim.d" ]; then
        curl -sLf https://spacevim.org/install.sh | bash
      fi

  # Install fonts
  - name: install fonts
    shell: |
      if [ ! -d "/usr/local/share/fonts" ]; then
        mkdir /usr/local/share/fonts
      fi
      cp -R fonts/* /usr/local/share/fonts

  # Setup zsh and misc configs and plugins
  - name: setup zshrc, oh-my-zsh and other configs
    become: yes
    become_user: "{{ normal_user }}"
    shell: |
      DOTS_REPO=https://raw.githubusercontent.com/the-robot/dots/master

      # create config folder if not exists
      if [ ! -d "{{ normal_user_home }}/.config" ]; then
        mkdir {{ normal_user_home }}/.config
      fi

      # override vscode settings.json
      curl -o {{ normal_user_home }}/.config/Code\ -\ OSS/User/settings.json $DOTS_REPO/vscode/settings.json

      # install z.sh
      curl -o {{ normal_user_home }}/.z.sh https://raw.githubusercontent.com/rupa/z/master/z.sh

      # install oh-my-zsh if not exists
      if [ ! -d "{{ normal_user_home }}/.oh-my-zsh" ]; then
        sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      fi

      # install zsh syntax highlight
      if [ ! -d "{{ normal_user_home }}/.zsh/zsh-syntax-highlighting" ]; then
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git {{ normal_user_home }}/.zsh/zsh-syntax-highlighting
      fi

      # override .zshrc
      curl -o {{ normal_user_home }}/.zshrc $DOTS_REPO/terminals/.zshrc

      # create alacritty folder and setup config if not exists
      if [ ! -d "{{ normal_user_home }}/.config/alacritty" ]; then
        mkdir {{ normal_user_home }}/.config/alacritty
      fi
      curl -o {{ normal_user_home }}/.config/alacritty/alacritty.yml $DOTS_REPO/terminals/alacritty/alacritty.yml

      # install tmux config
      curl -o {{ normal_user_home }}/.tmux.conf $DOTS_REPO/terminals/tmux/.tmux.conf

      # install tmux cpu plugin
      if [ ! -d "{{ normal_user_home }}/.tmux/plugins/tmux-cpu" ]; then
        git clone https://github.com/tmux-plugins/tmux-cpu.git {{ normal_user_home }}/.tmux/plugins/tmux-cpu
      fi

      # install Vundle vim plugin manager
      if [ ! -d "{{ normal_user_home }}/.vim/bundle/Vundle.vim" ]; then
        git clone https://github.com/VundleVim/Vundle.vim.git {{ normal_user_home }}/.vim/bundle/Vundle.vim
      fi

      # install Ctrlp fzf vim plugin
      if [ ! -d "{{ normal_user_home }}/.vim/bundle/ctrlp.vim" ]; then
        git clone https://github.com/ctrlpvim/ctrlp.vim.git {{ normal_user_home }}/.vim/bundle/ctrlp.vim
      fi

      # install neovim config
      if [ -d "{{ normal_user_home }}/.SpaceVim" ]; then
        # install color
        curl -o {{ normal_user_home }}/.SpaceVim/colors/monokai_pro.vim $DOTS_REPO/vi/nvim/colors/monokai_pro.vim

        # override config
        curl -o {{ normal_user_home }}/.SpaceVim/init.vim $DOTS_REPO/vi/nvim/init.vim
      fi

      # install spacevim config
      if [ ! -d "{{ normal_user_home }}/.SpaceVim.d" ]; then
        mkdir {{ normal_user_home }}/.SpaceVim.d
      fi
      curl -o {{ normal_user_home }}/.SpaceVim.d/init.toml $DOTS_REPO/vi/spacevim/init.toml
